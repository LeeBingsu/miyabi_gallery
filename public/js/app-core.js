/* MiyGal Core (images/storage 제외) */
(() => {
  const WORKER_URL = '';
  const r = (sel) => document.querySelector(sel);
  const rr = (sel) => Array.from(document.querySelectorAll(sel));
  function decodeSafe(s) { try { return decodeURIComponent(s); } catch { return s; } }
  function normalizeSeg(name,{isFolder=false}={}){name=decodeSafe(String(name||''));name=name.replace(/[\u200B-\u200D\uFEFF]/g,'').trim();name=name.replace(/[\r\n\t\0]/g,'');if(!isFolder)name=name.replace(/[\\/]+/g,'_');else name=name.replace(/[\\/]+/g,'/').replace(/^\/+|\/+$/g,'');name=name.replace(/[?#%]/g,'_');if(name.length>180)name=name.slice(0,180);return name}
  function joinKey(folder,name){const f=normalizeSeg(folder,{isFolder:true});const n=normalizeSeg(name);return f?`${f}/${n}`:n}
  async function apiList(path=''){const r1=await fetch(`${WORKER_URL}/api/list?path=${encodeURIComponent(path)}`,{credentials:'include'});if(r1.ok)return r1.json();const r2=await fetch(`${WORKER_URL}/api/list/${encodeURIComponent(path)}`,{credentials:'include'});if(!r2.ok)throw new Error('List failed');return r2.json()}
  async function apiFolders(parent=''){const res=await fetch(`${WORKER_URL}/api/folders?parent=${encodeURIComponent(parent)}`,{credentials:'include'});if(!res.ok)throw new Error('Folders failed');return res.json()}
  async function apiCreateFolder(path){const res=await fetch(`${WORKER_URL}/api/create-folder`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({folderPath:path})});if(!res.ok)throw new Error('Create folder failed');return res.json()}
  async function apiRename(oldKey,newKey,isFolder=false){const body=JSON.stringify({oldKey,newKey,isFolder});const r1=await fetch(`${WORKER_URL}/api/rename`,{method:'PUT',headers:{'Content-Type':'application/json'},body});if(r1.ok)return r1.json();const r2=await fetch(`${WORKER_URL}/api/rename-folder`,{method:'POST',headers:{'Content-Type':'application/json'},body});if(!r2.ok)throw new Error('Rename failed');return r2.json()}
  async function apiDeleteFile(key){const res=await fetch(`${WORKER_URL}/api/delete-file/${key}`,{method:'DELETE'});if(!res.ok&&res.status!==204)throw new Error('Delete file failed')}
  async function apiDeleteFolder(path){const clean=String(path||'').replace(/^\/+|\/+$/g,'');const res=await fetch(`${WORKER_URL}/api/delete-folder/${clean}`,{method:'DELETE'});if(!res.ok)throw new Error('Delete folder failed');return res.json()}
  async function apiUploadFile(targetFolder,file){const folder=normalizeSeg(targetFolder,{isFolder:true});const name=normalizeSeg(file.name);const url=folder?`${WORKER_URL}/api/upload/${encodeURIComponent(folder)}/${encodeURIComponent(name)}`:`${WORKER_URL}/api/upload/${encodeURIComponent(name)}`;const res=await fetch(url,{method:'PUT',body:file,headers:{'Content-Type':file.type}});if(!res.ok)throw new Error('Upload failed');return joinKey(folder,name)}
  let currentFolder='';let currentPath=[];let isSelectionMode=false;let selectedKeys=[];let cachedItems=[];let currentSort='name-az';
  const toastEl=r('#toast');function toast(m,t='success'){if(!toastEl)return;toastEl.textContent=m;toastEl.className=`toast ${t} show`;setTimeout(()=>toastEl.classList.remove('show'),3e3)}
  function setSort(mode){currentSort=mode;rr('.sort-btn').forEach(b=>b.classList.remove('active'));const map={'name-az':'#sortNameAZ','name-za':'#sortNameZA','date-newest':'#sortDateNewest','date-oldest':'#sortDateOldest'};const btn=r(map[mode]);btn&&btn.classList.add('active');renderGallery(cachedItems);toast(`Sorted by ${{'name-az':'Name A-Z','name-za':'Name Z-A','date-newest':'Newest','date-oldest':'Oldest'}[mode]}`)}window.setSortMode=setSort
  function sortItems(arr){const a=[...arr];switch(currentSort){case'name-az':return a.sort((x,y)=>decodeSafe(x.key.split('/').pop()).toLowerCase().localeCompare(decodeSafe(y.key.split('/').pop()).toLowerCase()));case'name-za':return a.sort((x,y)=>decodeSafe(y.key.split('/').pop()).toLowerCase().localeCompare(decodeSafe(x.key.split('/').pop()).toLowerCase()));case'date-newest':return a.sort((x,y)=>new Date(y.lastModified||y.uploaded||0)-new Date(x.lastModified||x.uploaded||0));case'date-oldest':return a.sort((x,y)=>new Date(x.lastModified||x.uploaded||0)-new Date(y.lastModified||y.uploaded||0));default:return a}}
  async function loadFolders(parent=''){try{const folders=await apiFolders(parent);const box=r('#folderList');if(!box)return;box.innerHTML='';folders.forEach(folder=>{const btn=document.createElement('button');btn.className='folder-pill';btn.textContent=`📁 ${decodeSafe(folder)}`;btn.onclick=()=>navigateToFolder(folder);box.appendChild(btn)});updateBreadcrumb()}catch(e){toast('Failed to load folders','error')}}
  function updateBreadcrumb(){const bc=r('#breadcrumb');if(!bc)return;bc.innerHTML='';const root=document.createElement('span');root.className='breadcrumb-item';root.textContent='🏠 Home';root.onclick=()=>navigateToPath(-1);bc.appendChild(root);currentPath.forEach((seg,idx)=>{const sep=document.createElement('span');sep.className='breadcrumb-separator';sep.textContent='/';bc.appendChild(sep);const item=document.createElement('span');item.className=idx===currentPath.length-1?'breadcrumb-item current':'breadcrumb-item';item.textContent=decodeSafe(seg);if(idx<currentPath.length-1)item.onclick=()=>navigateToPath(idx);bc.appendChild(item)})}
  function navigateToFolder(name){if(currentPath[currentPath.length-1]===name)return;currentPath.push(name);currentFolder=currentPath.join('/');loadFolders(currentFolder);loadGallery(currentFolder)}
  function navigateToPath(index){if(index===-1){currentPath=[];currentFolder='';loadFolders('');const g=r('#gallery');g&&(g.innerHTML='');const e=r('#emptyState');e&&(e.style.display='block')}else{currentPath=currentPath.slice(0,index+1);currentFolder=currentPath.join('/');loadFolders(currentFolder);loadGallery(currentFolder)}}
  async function loadGallery(folder){try{const items=await apiList(folder||'');cachedItems=items;renderGallery(items)}catch(e){toast('Failed to load images','error')}}
  function renderGallery(items){const g=r('#gallery'),empty=r('#emptyState');if(!g)return;g.innerHTML='';if(!items||!items.length){g.style.display='none';empty&&(empty.style.display='block');return}g.style.display='grid';empty&&(empty.style.display='none');const sorted=sortItems(items);sorted.forEach(obj=>{const key=obj.key;const item=document.createElement('div');item.className='gallery-item';item.dataset.key=key;const isTxt=key.toLowerCase().endsWith('.txt');if(isTxt){const fname=decodeSafe(key.split('/').pop()).replace(/\.txt$/i,'');item.innerHTML=`<input type="checkbox" class="gallery-item-checkbox" onchange="toggleImageSelection('${key.replace(/'/g,"\\'")}')"><div class="txt-chip" onclick="handleImageClick('${key.replace(/'/g,"\\'")}', event)">${fname}</div><button class="delete-btn" onclick="deleteFile('${key.replace(/'/g,"\\'")}', event)">×</button>`}else{item.innerHTML=`<input type="checkbox" class="gallery-item-checkbox" onchange="toggleImageSelection('${key.replace(/'/g,"\\'")}')"><img src="${WORKER_URL}/api/image/${key}" alt="Photo"><button class="delete-btn" onclick="deleteFile('${key.replace(/'/g,"\\'")}', event)">×</button>`;const img=item.querySelector('img');img.onclick=e=>handleImageClick(key,e)}g.appendChild(item)})}
  const fi=r('#fileInput');const folderInput=r('#folderInput');const bar=r('#uploadProgressBar'),fill=r('#uploadProgressFill'),txt=r('#uploadProgressText');
  fi&&fi.addEventListener('change',async function(){const files=Array.from(this.files||[]);if(!files.length)return;if(!currentFolder){toast('Please select a folder first','error');return}bar&&bar.classList.add('active');txt&&txt.classList.add('active');try{for(let i=0;i<files.length;i++){const f=files[i];txt&&(txt.textContent=`Uploading ${i+1} / ${files.length}: ${f.name}`);fill&&(fill.style.width=`${(i/files.length)*100}%`);await apiUploadFile(currentFolder,f)}fill&&(fill.style.width='100%');txt&&(txt.textContent='✓ Upload complete!');setTimeout(()=>{bar&&bar.classList.remove('active');txt&&txt.classList.remove('active');fill&&(fill.style.width='0%')},1500);toast(`✓ Uploaded ${files.length} file(s)`,'success');loadGallery(currentFolder)}catch(e){bar&&bar.classList.remove('active');txt&&txt.classList.remove('active');fill&&(fill.style.width='0%');toast('Upload failed','error')}this.value=''});
  folderInput&&folderInput.addEventListener('change',async function(){const files=Array.from(this.files||[]);if(!files.length)return;const first=files[0].webkitRelativePath||'';const root=first.split('/')[0]||'folder';const createNew=confirm(`Upload ${files.length} files from "${root}".\n\nOK = Create new folder\nCancel = Use current folder`);let targetFolder='';if(createNew){const full=currentFolder?`${currentFolder}/${root}`:root;await apiCreateFolder(full);currentPath.push(root);currentFolder=currentPath.join('/');await loadFolders(currentFolder.split('/').slice(0,-1).join('/'));targetFolder=full}else{if(!currentFolder){toast('Select a folder first','error');return}targetFolder=currentFolder}try{let count=0;for(const f of files){const rel=(f.webkitRelativePath||'').split('/').slice(1).join('/');const relFolder=rel.includes('/')?rel.split('/').slice(0,-1).join('/'):'';const destFolder=[targetFolder,relFolder].filter(Boolean).join('/');await apiUploadFile(destFolder,f);count++}toast(`✓ Uploaded ${count} files!`,'success');loadGallery(targetFolder)}catch(e){toast('Upload failed','error')}this.value=''});
  window.deleteFile=async (key,evt)=>{evt&&evt.stopPropagation&&evt.stopPropagation();if(!confirm('Delete this item?'))return;try{await apiDeleteFile(key);toast('✓ Deleted','success');loadGallery(currentFolder)}catch(e){toast('Failed to delete','error')}}
  window.showCreateFolder=async ()=>{const name=prompt('New folder name:');if(!name)return;const path=currentFolder?`${currentFolder}/${name}`:name;try{await apiCreateFolder(path);toast('✓ Folder created','success');loadFolders(currentFolder)}catch(e){toast('Failed to create folder','error')}}
  window.showRenameFolder=async ()=>{if(!currentFolder){toast('Select a folder first','error');return}const curr=currentPath[currentPath.length-1];const next=prompt(`Rename "${decodeSafe(curr)}" to:`);if(!next)return;const parent=currentPath.slice(0,-1).join('/');const newPath=parent?`${parent}/${next}`:next;try{await apiRename(currentFolder,newPath,true);toast('✓ Folder renamed','success');currentPath[currentPath.length-1]=next;currentFolder=currentPath.join('/');loadFolders(parent);loadGallery(currentFolder)}catch(e){toast('Failed to rename','error')}}
  window.showDeleteFolder=async ()=>{if(!currentFolder){toast('Select a folder first','error');return}if(!confirm(`Delete "${decodeSafe(currentPath[currentPath.length-1])}" and all contents?`))return;try{await apiDeleteFolder(currentFolder);toast('✓ Folder deleted','success');currentPath.pop();currentFolder=currentPath.join('/');loadFolders(currentFolder)}catch(e){toast('Failed to delete folder','error')}}
  window.toggleSelectionMode=()=>{isSelectionMode=!isSelectionMode;const g=r('#gallery'),btn=r('#selectBtn');if(isSelectionMode){g&&g.classList.add('selection-mode');btn&&(btn.innerHTML='<span>✖️</span> Cancel')}else{g&&g.classList.remove('selection-mode');btn&&(btn.innerHTML='<span>☑️</span> Select');selectedKeys=[];rr('.gallery-item').forEach(it=>{it.classList.remove('selected');const cb=it.querySelector('.gallery-item-checkbox');cb&&(cb.checked=false)});updateBulkBar()}};window.toggleImageSelection=(key)=>{const it=r(`.gallery-item[data-key="${key}"]`);if(!it)return;const cb=it.querySelector('.gallery-item-checkbox');if(cb.checked){selectedKeys.push(key);it.classList.add('selected')}else{selectedKeys=selectedKeys.filter(k=>k!==key);it.classList.remove('selected')}updateBulkBar()};function updateBulkBar(){const bar=r('#bulkActionBar'),count=r('#selectedCount');if(selectedKeys.length>0){bar&&bar.classList.add('active');count&&(count.textContent=`${selectedKeys.length} selected`)}else{bar&&bar.classList.remove('active')}}window.exitSelectionMode=()=>{if(isSelectionMode)window.toggleSelectionMode()}
  window.handleImageClick=(key,event)=>{if(isSelectionMode){event&&event.preventDefault&&event.preventDefault();const cb=event?.target?.parentElement?.querySelector?.('.gallery-item-checkbox');if(cb){cb.checked=!cb.checked;window.toggleImageSelection(key)}return}const isTxt=key.toLowerCase().endsWith('.txt');if(isTxt){openTextLightbox(`${WORKER_URL}/api/image/${key}`)}else{window.openLightbox&&window.openLightbox(`${WORKER_URL}/api/image/${key}`,key)}};function openTextLightbox(url){const light=r('#lightbox'),content=r('#lightbox-content');if(!light||!content)return;fetch(url,{credentials:'include'}).then(x=>x.text()).then(text=>{const esc=text.replace(/</g,'&lt;').replace(/>/g,'&gt;');content.innerHTML=`<div class="txt-viewer"><pre>${esc}</pre></div>`;light.classList.add('active')}).catch(()=>{content.innerHTML='<div class="txt-viewer"><pre>Failed to load text content</pre></div>';light.classList.add('active')})}window.closeLightbox=()=>{const l=r('#lightbox');l&&l.classList.remove('active')}
  loadFolders()
})();
